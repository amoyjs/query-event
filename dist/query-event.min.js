(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?b(exports,require("@amoy/common")):"function"==typeof define&&define.amd?define(["exports","@amoy/common"],b):(a=a||self,b(a.queryEvent={},a.common))})(this,function(a,b){'use strict';var e=Math.round;function c(a,b,c){i.includes(b)?(!a.RTouch&&(a.RTouch=new k(a)),a.RTouch.on(b,c)):(a.interactive=!0,a.on(b,c))}function d(a,b,c){i.includes(b)&&a.RTouch?a.RTouch.off(b,c):(a.interactive=!0,a.off(b,c))}var f=/** @class */function(){function a(){this.handlers=[]}return a.prototype.add=function(a){return this.handlers.push(a),this},a.prototype.del=function(a){var b=this;return a?this.handlers.map(function(c,d){c===a&&b.handlers.splice(d,1)}):this.handlers=[],this},a.prototype.fire=function(a){if(this.handlers&&this.handlers.length)return this.handlers.map(function(b){"function"==typeof b&&b(a)}),this},a.prototype.clear=function(){this.handlers=[]},a}(),g=function(a,c){if("object"!==b.type(a))return a;for(var d,e=a,f=c.split("."),g=0,h=f.length;g<h;g++)if(d=f[g],d)if(e[d])e=e[d];else{e=void 0;break}return e},h={getFingers:function(a){return g(a,"data.originalEvent.touches.length")||1},getPoint:function(a,b){if("touch"===a.data.pointerType){var c=a.data.originalEvent.touches;return{x:e(c[b].pageX),y:e(c[b].pageY)}}return{x:e(a.data.global.x),y:e(a.data.global.y)}},getVector:function(a,b){var c=e(a.x-b.x),d=e(a.y-b.y);return{x:c,y:d}},getLength:function(a){return Math.sqrt(a.x*a.x+a.y*a.y)},getAngle:function(a,b){var c=Math.acos;if("object"!=typeof a||"object"!=typeof b)return void console.error("getAngle error!");// 判断方向，顺时针为 1 ,逆时针为 -1；
var d,e,f=0<a.x*b.y-b.x*a.y?1:-1,g=this.getLength(a),h=this.getLength(b),i=g*h;// 两个向量的模；
return 0===i?0:(d=a.x*b.x+a.y*b.y,e=d/i,1<e&&(e=1),-1>e&&(e=-1),c(e)*f);// 通过数量积公式可以推导出：
// cos = (x1 * x2 + y1 * y2)/(|a| * |b|);
},getAnchorPoint:function(a){return{x:a.x,y:a.y}}},i=["touchstart","touchmove","touchend",// 拖动
"drag","dragstart","dragend",// 双指缩放
"pinch","pinchstart","pinchend",// 双指旋转
"rotate","rotatestart","rotateend",// 划动
"swipeleft","swiperight","swipeup","swipedown",// 短点击
"shorttap","longtap",// 单指缩放
"singlepinch","singlepinchstart","singlepinchend",// 单指旋转
"singlerotate","singlerotatestart","singlerotateend"],j=[{name:"pointerdown",fn:"_start"},{name:"pointermove",fn:"_move"},{name:"pointerup",fn:"_end"},{name:"pointerupoutside",fn:"_end"}],k=/** @class */function(){function a(a){this.fingers=0,this.touching=!1,this.Bus={},this.target=a,this.initEventBus(),this.bindOriginEvent()}return a.prototype.initEventBus=function(){var a=this;i.map(function(b){Object.defineProperty(a.Bus,b,{value:new f})})},a.prototype.bindOriginEvent=function(){var a=this;j.map(function(b){var c=b.name,d=b.fn;a.target.interactive=!0,a.target.on(c,a[d],a)})},a.prototype._start=function(a){if(this.touching=!0,this.startTime=Date.now(),this.fingers=h.getFingers(a),this.singleBasePoint=h.getAnchorPoint(this.target),this.swipeStartPoint=this.startPoint=h.getPoint(a,0),1===this.fingers){// 单指且监听 singlePinch 时，计算向量模；
var b=h.getVector(this.startPoint,this.singleBasePoint);this.singlePinchStartLength=h.getLength(b)}else 1<this.fingers&&(// 双指操作时，记录第二触控点
// 计算双指向量；
// 计算向量模
this.secondPoint=h.getPoint(a,1),this.vector1=h.getVector(this.secondPoint,this.startPoint),this.pinchStartLength=h.getLength(this.vector1));this.fireEvent("touchstart",{origin:a})},a.prototype._move=function(a){if(this.touching){var b=h.getPoint(a,0);if(this.startPoint||(this.startPoint=b),1<this.fingers){// 双指操作， 触发 pinch 与 rotate
var c=h.getPoint(a,1),d=h.getVector(c,b),e=h.getLength(d);this.pinchStartLength&&(this.eventStart("pinch",{origin:a,delta:{scale:e/this.pinchStartLength}}),this.pinchStartLength=e),this.vector1&&(this.eventStart("rotate",{delta:{rotate:h.getAngle(this.vector1,d)},origin:a}),this.vector1=d)}// 触发 drag
this.eventStart("drag",{delta:{x:b.x-this.startPoint.x,y:b.y-this.startPoint.y},origin:a}),this.fireEvent("touchmove",{origin:a}),this.startPoint=b}},a.prototype._end=function(a){var b=Math.abs,c=this;if(this.touching=!1,this.fingers=h.getFingers(a),["pinch","drag","rotate","singlerotate","singlepinch"].map(function(b){c.eventEnd(b,{origin:a,type:b})}),this.swipeStartPoint){var d={x:e(a.data.global.x),y:e(a.data.global.y)},f=d.x-this.swipeStartPoint.x,g=d.y-this.swipeStartPoint.y,i=Date.now(),j="";30<f&&100>b(g)?j="swiperight":-30>f&&100>b(g)?j="swipeleft":30<g&&100>b(f)?j="swipedown":-30>g&&100>b(f)?j="swipeup":30>b(f)&&30>b(g)&&(500>i-this.startTime?j="shorttap":j="longtap"),j&&this.fireEvent(j,{origin:a})}this.fireEvent("touchend",{origin:a})},a.prototype.fireEvent=function(a,b){this.Bus[a]&&this.Bus[a].fire(Object.assign(b,{type:a,stopPropagation:function(){b.origin.stopPropagation()}}))},a.prototype.destory=function(){var a=this;j.map(function(b){var c=b.name,d=b.fn;a.target.off(c,a[d],a)})},a.prototype.eventStart=function(a,b){var c=a+"ing";this[c]?this.fireEvent(a,b):(this.fireEvent(a+"start",b),this[c]=!0)},a.prototype.eventEnd=function(a,b){var c=a+"ing",d=a+"end";this[c]&&(b.type=d,this.fireEvent(d,b),this[c]=!1)},a.prototype.on=function(a,b){var c=this,d=a.trim().toLowerCase();return d.split(" ").map(function(a){c.Bus[a].add(b)}),this},a.prototype.off=function(a,b){var c=this,d=a.trim().toLowerCase();return d.split(" ").map(function(a){b?c.Bus[a].del(b):c.Bus[a].clear()}),this},a}(),l={/**
         * on
         *
         * event(s) binding
         *
         * @module query
         *
         * @param { String } name - event name
         * @param { Function } closure - event callback
         *
         * @example
         *
         * $(sprite).on('tap', () => {
         *     console.log('tapped')
         * })
         * // bind two events meanwhile
         * $(sprite).on('tap longtap', () => {
         *     console.log('tap longtap')
         * })
         */on:function(a,b){void 0===a&&(a=""),void 0===b&&(b=function(){});for(var d=a.split(" "),e=0;e<this.length;e++)for(var f=0;f<d.length;f++)this[e].interactive=!0,c(this[e],d[f],b);return this},/**
         * off
         *
         * event(s) unbinding
         *
         * @module query
         *
         * @param { String } name - event(s) name
         *
         * @example
         *
         * $(sprite).on('tap')
         * // unbind two events meanwhile
         * $(sprite).on('tap longtap')
         */off:function(a){void 0===a&&(a="");for(var b=a.split(" "),c=0;c<this.length;c++)for(var e=0;e<b.length;e++)this[c].off(b[e]),d(this[c],b[e]);return this}};window.query&&window.query.extend(l),a.default=l,a.event=l,Object.defineProperty(a,"__esModule",{value:!0})});
//# sourceMappingURL=query-event.min.js.map
